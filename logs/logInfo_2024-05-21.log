[2024-05-21 10:54:56 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 9460 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 10:54:56 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 10:54:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 10:54:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 10:54:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 10:54:57 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:54:57 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 10:54:57 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 10:54:57 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 10:54:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1175 ms[0;39m
[2024-05-21 10:54:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 10:54:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 10:54:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 10:54:58 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:54:58 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 10:54:58 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.42 seconds (process running for 2.879)[0;39m
[2024-05-21 10:54:58 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 10:54:58 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 10:54:58 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 10:54:58 [31mERROR[0;39m http-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.green.greengram.feed.model.FeedGetReq]: Constructor threw exception] with root cause[0;39m
java.lang.NullPointerException: Cannot invoke "java.lang.Long.longValue()" because "profileUserId" is null
	at com.green.greengram.feed.model.FeedGetReq.<init>(FeedGetReq.java:28)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:208)
	at org.springframework.validation.DataBinder.createObject(DataBinder.java:994)
	at org.springframework.validation.DataBinder.construct(DataBinder.java:903)
	at org.springframework.web.bind.ServletRequestDataBinder.construct(ServletRequestDataBinder.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.constructAttribute(ServletModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:148)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:54:59 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 10:54:59 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.193] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2685f62e[0;39m
[2024-05-21 10:54:59 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 10:55:21 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 10:55:21 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 10:55:23 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 7804 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 10:55:23 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 10:55:23 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 10:55:23 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 10:55:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 10:55:24 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:55:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 10:55:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 10:55:24 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 10:55:24 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1008 ms[0;39m
[2024-05-21 10:55:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 10:55:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 10:55:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 10:55:25 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:55:25 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 10:55:25 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.318 seconds (process running for 2.695)[0;39m
[2024-05-21 10:55:26 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 10:55:26 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 10:55:26 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 10:55:26 [31mERROR[0;39m http-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause[0;39m
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "AND "" at line 1, column 24.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy101.getFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeed(FeedService.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeed(<generated>)
	at com.green.greengram.feed.FeedControll.getFeed(FeedControll.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:55:26 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 10:55:26 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6235225f[0;39m
[2024-05-21 10:55:26 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 10:55:26 [31mERROR[0;39m http-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause[0;39m
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "AND "" at line 1, column 24.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy101.getFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeed(FeedService.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeed(<generated>)
	at com.green.greengram.feed.FeedControll.getFeed(FeedControll.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:56:16 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 10:56:16 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 10:56:18 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 10364 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 10:56:18 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 10:56:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 10:56:18 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 10:56:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 10:56:19 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:56:19 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 10:56:19 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 10:56:19 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 10:56:19 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 996 ms[0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.104 seconds (process running for 2.484)[0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.193] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3e4d4cd3[0;39m
[2024-05-21 10:56:20 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 10:56:22 [31mERROR[0;39m http-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause[0;39m
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "AND "" at line 1, column 23.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy101.getFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeed(FeedService.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeed(<generated>)
	at com.green.greengram.feed.FeedControll.getFeed(FeedControll.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:56:22 [31mERROR[0;39m http-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause[0;39m
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "AND "" at line 1, column 23.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy101.getFeed(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeed(FeedService.java:59)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeed(<generated>)
	at com.green.greengram.feed.FeedControll.getFeed(FeedControll.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 10:58:40 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 10:58:40 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 4624 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 10:58:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 10:58:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 10:58:43 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:58:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 10:58:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 10:58:43 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 10:58:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1006 ms[0;39m
[2024-05-21 10:58:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 10:58:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 10:58:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 10:58:44 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 10:58:44 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 10:58:44 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.115 seconds (process running for 2.487)[0;39m
[2024-05-21 10:58:44 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 10:58:44 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 10:58:44 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 10:58:44 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 10:58:44 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@687d419d[0;39m
[2024-05-21 10:58:44 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 31

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 5 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|feed_id |user_id |nm  |pic                                       |contents  |location  |created_at          |isfav |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|32      |23      |꾸   |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png  |ㄹㄹ        |ㄹㄹ        |2024-05-13 12:05:30 |0     |
|29      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |asdadssda |asdasd    |2024-05-10 18:06:55 |0     |
|28      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |22        |22        |2024-05-10 17:28:18 |0     |
|27      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wqqwd     |qwdwqd    |2024-05-10 17:26:28 |0     |
|26      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |wqdqwdqdw |2024-05-10 17:24:21 |0     |
|25      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdwqd    |dwqwqd    |2024-05-10 17:23:44 |0     |
|24      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |wqdqwd    |2024-05-10 17:22:55 |0     |
|23      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qdwqdw    |qwdwqd    |2024-05-10 17:21:36 |0     |
|22      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwddwq    |2024-05-10 17:20:34 |0     |
|21      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |qwdwdq    |2024-05-10 17:19:21 |0     |
|20      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wdqqwdwdq |wqd       |2024-05-10 17:17:20 |0     |
|19      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwdqwd    |2024-05-10 17:16:09 |0     |
|18      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |qwddwq    |2024-05-10 17:14:55 |0     |
|17      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |asdads    |asdasd    |2024-05-10 17:14:44 |0     |
|16      |6       |김동현 |null                                      |123       |ㅇㅇ        |2024-05-07 17:03:12 |0     |
|15      |4       |홍길동 |null                                      |으으        |대         |2024-05-07 12:57:39 |0     |
|14      |3       |홍길동 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |으으        |대         |2024-05-07 12:57:35 |0     |
|13      |2       |홍길동 |42031e6b-e2ff-4955-ab14-77fb0b50916f.webp |으으        |대         |2024-05-07 12:57:29 |0     |
|12      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:10:08 |0     |
|11      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:09:50 |0     |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|ee5b4faf-e7b6-4353-8cf6-da34c5131bff.webp |
|------------------------------------------|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 27
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 26
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 25
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 24
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 23
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 23
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 22
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 21
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 21
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 20
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 19
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 1 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 18
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|----|----|
|feed_comment_id |comment |created_at          |user_id |nm  |pic |
|----------------|--------|--------------------|--------|----|----|
|6               |아아      |2024-05-10 11:45:28 |6       |김동현 |null|
|5               |아아      |2024-05-10 11:45:27 |6       |김동현 |null|
|4               |아아      |2024-05-10 11:45:26 |6       |김동현 |null|
|3               |아아      |2024-05-10 11:45:25 |6       |김동현 |null|
|----------------|--------|--------------------|--------|----|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|47ad16bf-1451-457e-b4f5-b88c5c65b5cc.webp |
|------------------------------------------|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|bbd9007d-afd7-4af0-90e6-f21b313a988a.webp |
|------------------------------------------|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|4e5ac0da-c204-43d1-8f89-bab9b5a46b53.webp |
|------------------------------------------|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|5195fb19-d0c3-4f78-b50c-b8ea2996df8f.webp |
|------------------------------------------|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 10:58:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 10:58:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:02:01 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 31

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:01 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|32      |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |ㄹㄹ       |ㄹㄹ       |2024-05-13 12:05:30 |0     |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
[0;39m
[2024-05-21 11:02:01 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 1 msec}[0;39m
[2024-05-21 11:02:01 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:02:01 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:02:01 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 23
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 23, 1, 0)) AS following
                , SUM(IF(to_user_id = 23, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 31 AND to_user_id = 23, 1, 0)
                +
                IF(from_user_id = 23 AND to_user_id = 31, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 23
 {executed in 3 msec}[0;39m
[2024-05-21 11:02:01 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:02:01 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |1       |0      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:02:02 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        set from_user_id = 0,
            to_user_id   = 0
 {executed in 3 msec}[0;39m
[2024-05-21 11:02:03 [31mERROR[0;39m http-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.userfollow.UserFollowMapper.delUserFollow] with root cause[0;39m
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.userfollow.UserFollowMapper.delUserFollow
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy102.delUserFollow(Unknown Source)
	at com.green.greengram.userfollow.UserFollowService.deleteUserFollow(UserFollowService.java:17)
	at com.green.greengram.userfollow.UserFollowController.deleteUserFollow(UserFollowController.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:02:04 [31mERROR[0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.userfollow.UserFollowMapper.delUserFollow] with root cause[0;39m
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.userfollow.UserFollowMapper.delUserFollow
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy102.delUserFollow(Unknown Source)
	at com.green.greengram.userfollow.UserFollowService.deleteUserFollow(UserFollowService.java:17)
	at com.green.greengram.userfollow.UserFollowController.deleteUserFollow(UserFollowController.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:03:39 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:03:39 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 4816 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:03:41 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 1015 ms[0;39m
[2024-05-21 11:03:42 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:03:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:03:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:03:43 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:03:43 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:03:43 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.115 seconds (process running for 2.488)[0;39m
[2024-05-21 11:03:43 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:03:43 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:03:43 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:03:43 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:03:43 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6722a89a[0;39m
[2024-05-21 11:03:43 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:03:50 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
        WHERE from_user_id = 0
        AND to_user_id = 0
 {executed in 3 msec}[0;39m
[2024-05-21 11:03:50 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        set from_user_id = 0,
            to_user_id   = 0
 {executed in 1 msec}[0;39m
[2024-05-21 11:07:36 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 31

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:07:36 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|--------|---|----|---------|---------|-----------|------|
|feed_id |user_id |nm |pic |contents |location |created_at |isfav |
|--------|--------|---|----|---------|---------|-----------|------|
|--------|--------|---|----|---------|---------|-----------|------|
[0;39m
[2024-05-21 11:12:52 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:12:52 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:14:36 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 2580 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 11:14:36 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:14:36 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:14:36 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:14:37 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:14:37 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:14:37 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:14:37 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:14:37 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:14:37 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 993 ms[0;39m
[2024-05-21 11:14:37 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.064 seconds (process running for 2.429)[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 0 ms[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@63d54c51[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:14:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 31

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:14:38 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 23
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 23, 1, 0)) AS following
                , SUM(IF(to_user_id = 23, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 31 AND to_user_id = 23, 1, 0)
                +
                IF(from_user_id = 23 AND to_user_id = 31, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 23
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|32      |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |ㄹㄹ       |ㄹㄹ       |2024-05-13 12:05:30 |0     |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |1       |0      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:14:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:14:39 [33mWARN [0;39m http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-0' for key 'PRIMARY'[0;39m
[2024-05-21 11:14:39 [31mERROR[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        set from_user_id = 0,
            to_user_id   = 0
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy102.insUserFollow(Unknown Source)
	at com.green.greengram.userfollow.UserFollowService.postUserFollow(UserFollowService.java:13)
	at com.green.greengram.userfollow.UserFollowController.postUserFollow(UserFollowController.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:14:39 [31mERROR[0;39m http-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
### The error may exist in file [D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         set from_user_id = ?,             to_user_id   = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
; (conn=54) Duplicate entry '0-0' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy102.insUserFollow(Unknown Source)
	at com.green.greengram.userfollow.UserFollowService.postUserFollow(UserFollowService.java:13)
	at com.green.greengram.userfollow.UserFollowController.postUserFollow(UserFollowController.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:14:41 [33mWARN [0;39m http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-0' for key 'PRIMARY'[0;39m
[2024-05-21 11:14:41 [31mERROR[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        set from_user_id = 0,
            to_user_id   = 0
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy102.insUserFollow(Unknown Source)
	at com.green.greengram.userfollow.UserFollowService.postUserFollow(UserFollowService.java:13)
	at com.green.greengram.userfollow.UserFollowController.postUserFollow(UserFollowController.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:14:41 [31mERROR[0;39m http-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
### The error may exist in file [D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         set from_user_id = ?,             to_user_id   = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
; (conn=54) Duplicate entry '0-0' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy102.insUserFollow(Unknown Source)
	at com.green.greengram.userfollow.UserFollowService.postUserFollow(UserFollowService.java:13)
	at com.green.greengram.userfollow.UserFollowController.postUserFollow(UserFollowController.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:14:55 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 23
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 23, 1, 0)) AS following
                , SUM(IF(to_user_id = 23, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 31 AND to_user_id = 23, 1, 0)
                +
                IF(from_user_id = 23 AND to_user_id = 31, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 23
 {executed in 1 msec}[0;39m
[2024-05-21 11:14:55 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 31

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:55 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|32      |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |ㄹㄹ       |ㄹㄹ       |2024-05-13 12:05:30 |0     |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
[0;39m
[2024-05-21 11:14:55 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |1       |0      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:14:55 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:55 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:55 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:55 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 31

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 23
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 23, 1, 0)) AS following
                , SUM(IF(to_user_id = 23, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 31 AND to_user_id = 23, 1, 0)
                +
                IF(from_user_id = 23 AND to_user_id = 31, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 23
 {executed in 1 msec}[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|32      |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |ㄹㄹ       |ㄹㄹ       |2024-05-13 12:05:30 |0     |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |1       |0      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 5 msec}[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 31

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 23
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 23, 1, 0)) AS following
                , SUM(IF(to_user_id = 23, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 31 AND to_user_id = 23, 1, 0)
                +
                IF(from_user_id = 23 AND to_user_id = 31, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 23
 {executed in 1 msec}[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |1       |0      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|32      |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |ㄹㄹ       |ㄹㄹ       |2024-05-13 12:05:30 |0     |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 23
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 23, 1, 0)) AS following
                , SUM(IF(to_user_id = 23, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 31 AND to_user_id = 23, 1, 0)
                +
                IF(from_user_id = 23 AND to_user_id = 31, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 23
 {executed in 1 msec}[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |1       |0      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 31

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|32      |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |ㄹㄹ       |ㄹㄹ       |2024-05-13 12:05:30 |0     |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 1 msec}[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:14:56 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:14:56 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 31

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|feed_id |user_id |nm  |pic                                       |contents  |location  |created_at          |isfav |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|32      |23      |꾸   |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png  |ㄹㄹ        |ㄹㄹ        |2024-05-13 12:05:30 |0     |
|29      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |asdadssda |asdasd    |2024-05-10 18:06:55 |0     |
|28      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |22        |22        |2024-05-10 17:28:18 |0     |
|27      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wqqwd     |qwdwqd    |2024-05-10 17:26:28 |0     |
|26      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |wqdqwdqdw |2024-05-10 17:24:21 |0     |
|25      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdwqd    |dwqwqd    |2024-05-10 17:23:44 |0     |
|24      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |wqdqwd    |2024-05-10 17:22:55 |0     |
|23      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qdwqdw    |qwdwqd    |2024-05-10 17:21:36 |0     |
|22      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwddwq    |2024-05-10 17:20:34 |0     |
|21      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |qwdwdq    |2024-05-10 17:19:21 |0     |
|20      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wdqqwdwdq |wqd       |2024-05-10 17:17:20 |0     |
|19      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwdqwd    |2024-05-10 17:16:09 |0     |
|18      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |qwddwq    |2024-05-10 17:14:55 |0     |
|17      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |asdads    |asdasd    |2024-05-10 17:14:44 |0     |
|16      |6       |김동현 |null                                      |123       |ㅇㅇ        |2024-05-07 17:03:12 |0     |
|15      |4       |홍길동 |null                                      |으으        |대         |2024-05-07 12:57:39 |0     |
|14      |3       |홍길동 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |으으        |대         |2024-05-07 12:57:35 |0     |
|13      |2       |홍길동 |42031e6b-e2ff-4955-ab14-77fb0b50916f.webp |으으        |대         |2024-05-07 12:57:29 |0     |
|12      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:10:08 |0     |
|11      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:09:50 |0     |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|ee5b4faf-e7b6-4353-8cf6-da34c5131bff.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 27
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 26
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 25
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 24
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 23
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 23
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 22
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 21
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 21
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 20
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 19
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 18
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|----|----|
|feed_comment_id |comment |created_at          |user_id |nm  |pic |
|----------------|--------|--------------------|--------|----|----|
|6               |아아      |2024-05-10 11:45:28 |6       |김동현 |null|
|5               |아아      |2024-05-10 11:45:27 |6       |김동현 |null|
|4               |아아      |2024-05-10 11:45:26 |6       |김동현 |null|
|3               |아아      |2024-05-10 11:45:25 |6       |김동현 |null|
|----------------|--------|--------------------|--------|----|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|47ad16bf-1451-457e-b4f5-b88c5c65b5cc.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|bbd9007d-afd7-4af0-90e6-f21b313a988a.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|4e5ac0da-c204-43d1-8f89-bab9b5a46b53.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|5195fb19-d0c3-4f78-b50c-b8ea2996df8f.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:05 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:05 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:08 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 31
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 31, 1, 0)) AS following
                , SUM(IF(to_user_id = 31, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 31 AND to_user_id = 31, 1, 0)
                +
                IF(from_user_id = 31 AND to_user_id = 31, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 31
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:08 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---|----|-----------|--------|-------|----------|---------|------------|
|nm |pic |created_at |feedcnt |favcnt |following |follower |followstate |
|---|----|-----------|--------|-------|----------|---------|------------|
|---|----|-----------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:15:08 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 31

            WHERE A.writer_id = 31

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:08 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|---|----|---------|---------|-----------|------|
|feed_id |user_id |nm |pic |contents |location |created_at |isfav |
|--------|--------|---|----|---------|---------|-----------|------|
|--------|--------|---|----|---------|---------|-----------|------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 31

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|feed_id |user_id |nm  |pic                                       |contents  |location  |created_at          |isfav |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|32      |23      |꾸   |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png  |ㄹㄹ        |ㄹㄹ        |2024-05-13 12:05:30 |0     |
|29      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |asdadssda |asdasd    |2024-05-10 18:06:55 |0     |
|28      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |22        |22        |2024-05-10 17:28:18 |0     |
|27      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wqqwd     |qwdwqd    |2024-05-10 17:26:28 |0     |
|26      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |wqdqwdqdw |2024-05-10 17:24:21 |0     |
|25      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdwqd    |dwqwqd    |2024-05-10 17:23:44 |0     |
|24      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |wqdqwd    |2024-05-10 17:22:55 |0     |
|23      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qdwqdw    |qwdwqd    |2024-05-10 17:21:36 |0     |
|22      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwddwq    |2024-05-10 17:20:34 |0     |
|21      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |qwdwdq    |2024-05-10 17:19:21 |0     |
|20      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wdqqwdwdq |wqd       |2024-05-10 17:17:20 |0     |
|19      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwdqwd    |2024-05-10 17:16:09 |0     |
|18      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |qwddwq    |2024-05-10 17:14:55 |0     |
|17      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |asdads    |asdasd    |2024-05-10 17:14:44 |0     |
|16      |6       |김동현 |null                                      |123       |ㅇㅇ        |2024-05-07 17:03:12 |0     |
|15      |4       |홍길동 |null                                      |으으        |대         |2024-05-07 12:57:39 |0     |
|14      |3       |홍길동 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |으으        |대         |2024-05-07 12:57:35 |0     |
|13      |2       |홍길동 |42031e6b-e2ff-4955-ab14-77fb0b50916f.webp |으으        |대         |2024-05-07 12:57:29 |0     |
|12      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:10:08 |0     |
|11      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:09:50 |0     |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|ee5b4faf-e7b6-4353-8cf6-da34c5131bff.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 27
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 26
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 25
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 24
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 23
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 23
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 22
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 21
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 21
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 20
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 19
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 18
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|----|----|
|feed_comment_id |comment |created_at          |user_id |nm  |pic |
|----------------|--------|--------------------|--------|----|----|
|6               |아아      |2024-05-10 11:45:28 |6       |김동현 |null|
|5               |아아      |2024-05-10 11:45:27 |6       |김동현 |null|
|4               |아아      |2024-05-10 11:45:26 |6       |김동현 |null|
|3               |아아      |2024-05-10 11:45:25 |6       |김동현 |null|
|----------------|--------|--------------------|--------|----|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 1 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|47ad16bf-1451-457e-b4f5-b88c5c65b5cc.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|bbd9007d-afd7-4af0-90e6-f21b313a988a.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|4e5ac0da-c204-43d1-8f89-bab9b5a46b53.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|5195fb19-d0c3-4f78-b50c-b8ea2996df8f.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:15:13 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:15:13 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:04 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = '모꼬꼬'
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:04 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|----|----|---|-----------------------------------------|--------------------|-----------|
|user_id |uid |upw |nm |pic                                      |created_at          |updated_at |
|--------|----|----|---|-----------------------------------------|--------------------|-----------|
|22      |모꼬꼬 |123 |킥  |dda1ca67-d2b8-431b-8c51-48218d16c84e.png |2024-05-13 11:08:40 |null       |
|--------|----|----|---|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 11:16:04 [31mERROR[0;39m http-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Invalid salt version] with root cause[0;39m
java.lang.IllegalArgumentException: Invalid salt version
	at org.mindrot.jbcrypt.BCrypt.hashpw(BCrypt.java:659)
	at org.mindrot.jbcrypt.BCrypt.checkpw(BCrypt.java:764)
	at com.green.greengram.user.UserService.postSignIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.postSignIn(<generated>)
	at com.green.greengram.user.UserControllr.postSignIn(UserControllr.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:16:10 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = '모꼬꼬'
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:10 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|----|----|---|-----------------------------------------|--------------------|-----------|
|user_id |uid |upw |nm |pic                                      |created_at          |updated_at |
|--------|----|----|---|-----------------------------------------|--------------------|-----------|
|22      |모꼬꼬 |123 |킥  |dda1ca67-d2b8-431b-8c51-48218d16c84e.png |2024-05-13 11:08:40 |null       |
|--------|----|----|---|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 11:16:10 [31mERROR[0;39m http-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Invalid salt version] with root cause[0;39m
java.lang.IllegalArgumentException: Invalid salt version
	at org.mindrot.jbcrypt.BCrypt.hashpw(BCrypt.java:659)
	at org.mindrot.jbcrypt.BCrypt.checkpw(BCrypt.java:764)
	at com.green.greengram.user.UserService.postSignIn(UserService.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.postSignIn(<generated>)
	at com.green.greengram.user.UserControllr.postSignIn(UserControllr.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:16:17 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = '모꾸꾸'
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:17 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|----|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|user_id |uid |upw                                                          |nm |pic                                      |created_at          |updated_at |
|--------|----|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|23      |모꾸꾸 |$2a$10$1t.CjcuJot4/lGzFe7Xid.Rz0.ZTaC.dR9JPvLFuP.Ien./v4Ke/O |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |null       |
|--------|----|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 11:16:17 [31mERROR[0;39m http-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: 비밀번호를 확인해주세요] with root cause[0;39m
java.lang.RuntimeException: 비밀번호를 확인해주세요
	at com.green.greengram.user.UserService.postSignIn(UserService.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.user.UserService$$SpringCGLIB$$0.postSignIn(<generated>)
	at com.green.greengram.user.UserControllr.postSignIn(UserControllr.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId, uid, upw, nm, pic, created_at AS createdAt, updated_at AS updatedAt
        FROM user
        WHERE uid = '모꾸꾸'
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|----|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|user_id |uid |upw                                                          |nm |pic                                      |created_at          |updated_at |
|--------|----|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
|23      |모꾸꾸 |$2a$10$1t.CjcuJot4/lGzFe7Xid.Rz0.ZTaC.dR9JPvLFuP.Ien./v4Ke/O |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |null       |
|--------|----|-------------------------------------------------------------|---|-----------------------------------------|--------------------|-----------|
[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-4] [com.green.greengram.user.UserControllr] [36mpic : SignInRes(userId=23, nm=꾸, pic=452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png)[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|feed_id |user_id |nm  |pic                                       |contents  |location  |created_at          |isfav |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|32      |23      |꾸   |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png  |ㄹㄹ        |ㄹㄹ        |2024-05-13 12:05:30 |0     |
|29      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |asdadssda |asdasd    |2024-05-10 18:06:55 |0     |
|28      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |22        |22        |2024-05-10 17:28:18 |0     |
|27      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wqqwd     |qwdwqd    |2024-05-10 17:26:28 |0     |
|26      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |wqdqwdqdw |2024-05-10 17:24:21 |0     |
|25      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdwqd    |dwqwqd    |2024-05-10 17:23:44 |0     |
|24      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |wqdqwd    |2024-05-10 17:22:55 |0     |
|23      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qdwqdw    |qwdwqd    |2024-05-10 17:21:36 |0     |
|22      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwddwq    |2024-05-10 17:20:34 |0     |
|21      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |qwdwdq    |2024-05-10 17:19:21 |0     |
|20      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wdqqwdwdq |wqd       |2024-05-10 17:17:20 |0     |
|19      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwdqwd    |2024-05-10 17:16:09 |0     |
|18      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |qwddwq    |2024-05-10 17:14:55 |0     |
|17      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |asdads    |asdasd    |2024-05-10 17:14:44 |0     |
|16      |6       |김동현 |null                                      |123       |ㅇㅇ        |2024-05-07 17:03:12 |0     |
|15      |4       |홍길동 |null                                      |으으        |대         |2024-05-07 12:57:39 |0     |
|14      |3       |홍길동 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |으으        |대         |2024-05-07 12:57:35 |0     |
|13      |2       |홍길동 |42031e6b-e2ff-4955-ab14-77fb0b50916f.webp |으으        |대         |2024-05-07 12:57:29 |0     |
|12      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:10:08 |0     |
|11      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:09:50 |0     |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|ee5b4faf-e7b6-4353-8cf6-da34c5131bff.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 27
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 26
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 25
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 24
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 23
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 23
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 22
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 21
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 21
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 20
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 19
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 18
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|----|----|
|feed_comment_id |comment |created_at          |user_id |nm  |pic |
|----------------|--------|--------------------|--------|----|----|
|6               |아아      |2024-05-10 11:45:28 |6       |김동현 |null|
|5               |아아      |2024-05-10 11:45:27 |6       |김동현 |null|
|4               |아아      |2024-05-10 11:45:26 |6       |김동현 |null|
|3               |아아      |2024-05-10 11:45:25 |6       |김동현 |null|
|----------------|--------|--------------------|--------|----|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|47ad16bf-1451-457e-b4f5-b88c5c65b5cc.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|bbd9007d-afd7-4af0-90e6-f21b313a988a.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|4e5ac0da-c204-43d1-8f89-bab9b5a46b53.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|5195fb19-d0c3-4f78-b50c-b8ea2996df8f.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:19 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:19 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:22 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 23
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 23, 1, 0)) AS following
                , SUM(IF(to_user_id = 23, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 23, 1, 0)
                +
                IF(from_user_id = 23 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 23
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:22 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:22 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |1       |0      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:16:22 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|32      |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |ㄹㄹ       |ㄹㄹ       |2024-05-13 12:05:30 |0     |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
[0;39m
[2024-05-21 11:16:22 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:22 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:22 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:22 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|feed_id |user_id |nm  |pic                                       |contents  |location  |created_at          |isfav |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|32      |23      |꾸   |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png  |ㄹㄹ        |ㄹㄹ        |2024-05-13 12:05:30 |0     |
|29      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |asdadssda |asdasd    |2024-05-10 18:06:55 |0     |
|28      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |22        |22        |2024-05-10 17:28:18 |0     |
|27      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wqqwd     |qwdwqd    |2024-05-10 17:26:28 |0     |
|26      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |wqdqwdqdw |2024-05-10 17:24:21 |0     |
|25      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdwqd    |dwqwqd    |2024-05-10 17:23:44 |0     |
|24      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |wqdqwd    |2024-05-10 17:22:55 |0     |
|23      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qdwqdw    |qwdwqd    |2024-05-10 17:21:36 |0     |
|22      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwddwq    |2024-05-10 17:20:34 |0     |
|21      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |qwdwdq    |2024-05-10 17:19:21 |0     |
|20      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wdqqwdwdq |wqd       |2024-05-10 17:17:20 |0     |
|19      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwdqwd    |2024-05-10 17:16:09 |0     |
|18      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |qwddwq    |2024-05-10 17:14:55 |0     |
|17      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |asdads    |asdasd    |2024-05-10 17:14:44 |0     |
|16      |6       |김동현 |null                                      |123       |ㅇㅇ        |2024-05-07 17:03:12 |0     |
|15      |4       |홍길동 |null                                      |으으        |대         |2024-05-07 12:57:39 |0     |
|14      |3       |홍길동 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |으으        |대         |2024-05-07 12:57:35 |0     |
|13      |2       |홍길동 |42031e6b-e2ff-4955-ab14-77fb0b50916f.webp |으으        |대         |2024-05-07 12:57:29 |0     |
|12      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:10:08 |0     |
|11      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:09:50 |0     |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|ee5b4faf-e7b6-4353-8cf6-da34c5131bff.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 27
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 26
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 25
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 24
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 23
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 23
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 22
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 21
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 21
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 20
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 19
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 18
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|----|----|
|feed_comment_id |comment |created_at          |user_id |nm  |pic |
|----------------|--------|--------------------|--------|----|----|
|6               |아아      |2024-05-10 11:45:28 |6       |김동현 |null|
|5               |아아      |2024-05-10 11:45:27 |6       |김동현 |null|
|4               |아아      |2024-05-10 11:45:26 |6       |김동현 |null|
|3               |아아      |2024-05-10 11:45:25 |6       |김동현 |null|
|----------------|--------|--------------------|--------|----|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|47ad16bf-1451-457e-b4f5-b88c5c65b5cc.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|bbd9007d-afd7-4af0-90e6-f21b313a988a.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|4e5ac0da-c204-43d1-8f89-bab9b5a46b53.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|5195fb19-d0c3-4f78-b50c-b8ea2996df8f.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:26 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:26 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:27 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:27 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 23
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 23, 1, 0)) AS following
                , SUM(IF(to_user_id = 23, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 23, 1, 0)
                +
                IF(from_user_id = 23 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 23
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:27 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|32      |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |ㄹㄹ       |ㄹㄹ       |2024-05-13 12:05:30 |0     |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
[0;39m
[2024-05-21 11:16:27 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |1       |0      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:16:27 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:27 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:27 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:27 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|feed_id |user_id |nm  |pic                                       |contents  |location  |created_at          |isfav |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|32      |23      |꾸   |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png  |ㄹㄹ        |ㄹㄹ        |2024-05-13 12:05:30 |0     |
|29      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |asdadssda |asdasd    |2024-05-10 18:06:55 |0     |
|28      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |22        |22        |2024-05-10 17:28:18 |0     |
|27      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wqqwd     |qwdwqd    |2024-05-10 17:26:28 |0     |
|26      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |wqdqwdqdw |2024-05-10 17:24:21 |0     |
|25      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdwqd    |dwqwqd    |2024-05-10 17:23:44 |0     |
|24      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |wqdqwd    |2024-05-10 17:22:55 |0     |
|23      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qdwqdw    |qwdwqd    |2024-05-10 17:21:36 |0     |
|22      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwddwq    |2024-05-10 17:20:34 |0     |
|21      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |qwdwdq    |2024-05-10 17:19:21 |0     |
|20      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wdqqwdwdq |wqd       |2024-05-10 17:17:20 |0     |
|19      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwdqwd    |2024-05-10 17:16:09 |0     |
|18      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |qwddwq    |2024-05-10 17:14:55 |0     |
|17      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |asdads    |asdasd    |2024-05-10 17:14:44 |0     |
|16      |6       |김동현 |null                                      |123       |ㅇㅇ        |2024-05-07 17:03:12 |0     |
|15      |4       |홍길동 |null                                      |으으        |대         |2024-05-07 12:57:39 |0     |
|14      |3       |홍길동 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |으으        |대         |2024-05-07 12:57:35 |0     |
|13      |2       |홍길동 |42031e6b-e2ff-4955-ab14-77fb0b50916f.webp |으으        |대         |2024-05-07 12:57:29 |0     |
|12      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:10:08 |0     |
|11      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:09:50 |0     |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|ee5b4faf-e7b6-4353-8cf6-da34c5131bff.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 27
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 26
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 25
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 24
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 23
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 23
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 22
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 21
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 21
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 20
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 19
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 18
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|----|----|
|feed_comment_id |comment |created_at          |user_id |nm  |pic |
|----------------|--------|--------------------|--------|----|----|
|6               |아아      |2024-05-10 11:45:28 |6       |김동현 |null|
|5               |아아      |2024-05-10 11:45:27 |6       |김동현 |null|
|4               |아아      |2024-05-10 11:45:26 |6       |김동현 |null|
|3               |아아      |2024-05-10 11:45:25 |6       |김동현 |null|
|----------------|--------|--------------------|--------|----|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|47ad16bf-1451-457e-b4f5-b88c5c65b5cc.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|bbd9007d-afd7-4af0-90e6-f21b313a988a.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|4e5ac0da-c204-43d1-8f89-bab9b5a46b53.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|5195fb19-d0c3-4f78-b50c-b8ea2996df8f.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:16:30 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:30 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:32 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:32 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:32 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:16:32 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:16:32 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:32 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:32 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:16:32 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:32 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:32 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:16:32 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:16:32 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:16:33 [33mWARN [0;39m http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-0' for key 'PRIMARY'[0;39m
[2024-05-21 11:16:33 [31mERROR[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        set from_user_id = 0,
            to_user_id   = 0
 {FAILED after 0 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy102.insUserFollow(Unknown Source)
	at com.green.greengram.userfollow.UserFollowService.postUserFollow(UserFollowService.java:13)
	at com.green.greengram.userfollow.UserFollowController.postUserFollow(UserFollowController.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:16:33 [31mERROR[0;39m http-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
### The error may exist in file [D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         set from_user_id = ?,             to_user_id   = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
; (conn=54) Duplicate entry '0-0' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=54) Duplicate entry '0-0' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy102.insUserFollow(Unknown Source)
	at com.green.greengram.userfollow.UserFollowService.postUserFollow(UserFollowService.java:13)
	at com.green.greengram.userfollow.UserFollowController.postUserFollow(UserFollowController.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:18:17 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:18:17 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:18:19 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 3868 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 11:18:19 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:18:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:18:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:18:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:18:20 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:18:20 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:18:20 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:18:20 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:18:20 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 982 ms[0;39m
[2024-05-21 11:18:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:18:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:18:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:18:21 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:18:21 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:18:21 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.052 seconds (process running for 2.415)[0;39m
[2024-05-21 11:18:21 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:18:21 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:18:21 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 0 ms[0;39m
[2024-05-21 11:18:21 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:18:22 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@601d639c[0;39m
[2024-05-21 11:18:22 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:18:27 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:27 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:27 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:18:27 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:18:27 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 1 msec}[0;39m
[2024-05-21 11:18:27 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:27 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:27 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:18:27 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:27 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:18:27 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:18:27 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:18:28 [33mWARN [0;39m http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] [36mError: 1062-23000: Duplicate entry '0-0' for key 'PRIMARY'[0;39m
[2024-05-21 11:18:28 [31mERROR[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        set from_user_id = 0,
            to_user_id   = 0
 {FAILED after 1 msec}[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=64) Duplicate entry '0-0' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy102.insUserFollow(Unknown Source)
	at com.green.greengram.userfollow.UserFollowService.postUserFollow(UserFollowService.java:13)
	at com.green.greengram.userfollow.UserFollowController.postUserFollow(UserFollowController.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:18:28 [31mERROR[0;39m http-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] [36mServlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=64) Duplicate entry '0-0' for key 'PRIMARY'
### The error may exist in file [D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\resources\main\mappers\UserFollowMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO user_follow         set from_user_id = ?,             to_user_id   = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: (conn=64) Duplicate entry '0-0' for key 'PRIMARY'
; (conn=64) Duplicate entry '0-0' for key 'PRIMARY'] with root cause[0;39m
java.sql.SQLIntegrityConstraintViolationException: (conn=64) Duplicate entry '0-0' for key 'PRIMARY'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy95.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy102.insUserFollow(Unknown Source)
	at com.green.greengram.userfollow.UserFollowService.postUserFollow(UserFollowService.java:13)
	at com.green.greengram.userfollow.UserFollowController.postUserFollow(UserFollowController.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-05-21 11:19:27 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)[0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 3868 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 309 ms[0;39m
[2024-05-21 11:19:27 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:19:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:19:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:19:28 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:19:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:19:28 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 0.566 seconds (process running for 68.81)[0;39m
[2024-05-21 11:19:28 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-05-21 11:20:31 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 4484 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 11:20:31 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:20:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:20:31 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 975 ms[0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:20:32 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.026 seconds (process running for 2.386)[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@53075fd8[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:20:33 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:33 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:20:33 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:33 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:33 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:33 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:33 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:35 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:35 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:37 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        set from_user_id = 23,
            to_user_id   = 20
 {executed in 2 msec}[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |1        |1           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |1        |1           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |1        |1           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:39 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:39 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:40 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:40 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:40 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |1        |1           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:20:40 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:20:40 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:40 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:40 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:40 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:40 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:40 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:40 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:40 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
        WHERE from_user_id = 23
        AND to_user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:41 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
        set from_user_id = 23,
            to_user_id   = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |1        |1           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |1        |1           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |1        |1           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:20:42 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:20:42 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:21:03 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
        WHERE from_user_id = 23
        AND to_user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:21:03 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
        set from_user_id = 23,
            to_user_id   = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:21:05 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:05 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:05 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |1        |1           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:21:05 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:21:05 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:05 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:21:05 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:05 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:21:05 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:05 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:21:05 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:05 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:21:18 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
        WHERE from_user_id = 23
        AND to_user_id = 20
 {executed in 2 msec}[0;39m
[2024-05-21 11:21:18 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        set from_user_id = 23,
            to_user_id   = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:21:52 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:21:52 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:21:54 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 11516 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 11:21:54 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:21:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:21:54 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:21:55 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:21:55 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:21:55 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:21:55 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:21:55 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:21:55 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 969 ms[0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.072 seconds (process running for 2.448)[0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 2 ms[0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@412b6816[0;39m
[2024-05-21 11:21:56 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 11:21:57 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:57 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:21:57 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:21:57 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |1        |1           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:21:57 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:57 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:21:57 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:57 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:21:57 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:57 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:21:57 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:57 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:21:59 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
        WHERE from_user_id = 23
        AND to_user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:21:59 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:59 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:59 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:21:59 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:21:59 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:59 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:21:59 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:59 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:21:59 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 1 msec}[0;39m
[2024-05-21 11:21:59 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:21:59 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:21:59 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:28 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 23
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 23, 1, 0)) AS following
                , SUM(IF(to_user_id = 23, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 23, 1, 0)
                +
                IF(from_user_id = 23 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 23
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:28 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 20, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:28 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|---|----|---------|---------|-----------|------|
|feed_id |user_id |nm |pic |contents |location |created_at |isfav |
|--------|--------|---|----|---------|---------|-----------|------|
|--------|--------|---|----|---------|---------|-----------|------|
[0;39m
[2024-05-21 11:22:28 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |1       |0      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:22:30 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 40, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:30 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:30 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|---|----|---------|---------|-----------|------|
|feed_id |user_id |nm |pic |contents |location |created_at |isfav |
|--------|--------|---|----|---------|---------|-----------|------|
|--------|--------|---|----|---------|---------|-----------|------|
[0;39m
[2024-05-21 11:22:30 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:22:34 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 23
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 23, 1, 0)) AS following
                , SUM(IF(to_user_id = 23, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 23, 1, 0)
                +
                IF(from_user_id = 23 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 23
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:34 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |1       |0      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:22:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|32      |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |ㄹㄹ       |ㄹㄹ       |2024-05-13 12:05:30 |0     |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
[0;39m
[2024-05-21 11:22:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:34 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:34 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|feed_id |user_id |nm  |pic                                       |contents  |location  |created_at          |isfav |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|32      |23      |꾸   |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png  |ㄹㄹ        |ㄹㄹ        |2024-05-13 12:05:30 |0     |
|29      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |asdadssda |asdasd    |2024-05-10 18:06:55 |0     |
|28      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |22        |22        |2024-05-10 17:28:18 |0     |
|27      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wqqwd     |qwdwqd    |2024-05-10 17:26:28 |0     |
|26      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |wqdqwdqdw |2024-05-10 17:24:21 |0     |
|25      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdwqd    |dwqwqd    |2024-05-10 17:23:44 |0     |
|24      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |wqdqwd    |2024-05-10 17:22:55 |0     |
|23      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qdwqdw    |qwdwqd    |2024-05-10 17:21:36 |0     |
|22      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwddwq    |2024-05-10 17:20:34 |0     |
|21      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |qwdwdq    |2024-05-10 17:19:21 |0     |
|20      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wdqqwdwdq |wqd       |2024-05-10 17:17:20 |0     |
|19      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwdqwd    |2024-05-10 17:16:09 |0     |
|18      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |qwddwq    |2024-05-10 17:14:55 |0     |
|17      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |asdads    |asdasd    |2024-05-10 17:14:44 |0     |
|16      |6       |김동현 |null                                      |123       |ㅇㅇ        |2024-05-07 17:03:12 |0     |
|15      |4       |홍길동 |null                                      |으으        |대         |2024-05-07 12:57:39 |0     |
|14      |3       |홍길동 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |으으        |대         |2024-05-07 12:57:35 |0     |
|13      |2       |홍길동 |42031e6b-e2ff-4955-ab14-77fb0b50916f.webp |으으        |대         |2024-05-07 12:57:29 |0     |
|12      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:10:08 |0     |
|11      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:09:50 |0     |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|ee5b4faf-e7b6-4353-8cf6-da34c5131bff.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 27
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 26
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 25
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 24
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 23
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 23
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 22
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 21
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 21
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 20
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 19
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 18
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|----|----|
|feed_comment_id |comment |created_at          |user_id |nm  |pic |
|----------------|--------|--------------------|--------|----|----|
|6               |아아      |2024-05-10 11:45:28 |6       |김동현 |null|
|5               |아아      |2024-05-10 11:45:27 |6       |김동현 |null|
|4               |아아      |2024-05-10 11:45:26 |6       |김동현 |null|
|3               |아아      |2024-05-10 11:45:25 |6       |김동현 |null|
|----------------|--------|--------------------|--------|----|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|47ad16bf-1451-457e-b4f5-b88c5c65b5cc.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|bbd9007d-afd7-4af0-90e6-f21b313a988a.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|4e5ac0da-c204-43d1-8f89-bab9b5a46b53.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|5195fb19-d0c3-4f78-b50c-b8ea2996df8f.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:38 [32mDEBUG[0;39m http-nio-8080-exec-9] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:38 [32mINFO [0;39m http-nio-8080-exec-9] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:40 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 23
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 23, 1, 0)) AS following
                , SUM(IF(to_user_id = 23, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 23, 1, 0)
                +
                IF(from_user_id = 23 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 23
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:40 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:40 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
|32      |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |ㄹㄹ       |ㄹㄹ       |2024-05-13 12:05:30 |0     |
|--------|--------|---|-----------------------------------------|---------|---------|--------------------|------|
[0;39m
[2024-05-21 11:22:40 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |2024-05-13 11:09:31 |1       |0      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:22:40 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:40 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:40 [32mDEBUG[0;39m http-nio-8080-exec-7] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:40 [32mINFO [0;39m http-nio-8080-exec-7] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|feed_id |user_id |nm  |pic                                       |contents  |location  |created_at          |isfav |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|32      |23      |꾸   |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png  |ㄹㄹ        |ㄹㄹ        |2024-05-13 12:05:30 |0     |
|29      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |asdadssda |asdasd    |2024-05-10 18:06:55 |0     |
|28      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |22        |22        |2024-05-10 17:28:18 |0     |
|27      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wqqwd     |qwdwqd    |2024-05-10 17:26:28 |0     |
|26      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |wqdqwdqdw |2024-05-10 17:24:21 |0     |
|25      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdwqd    |dwqwqd    |2024-05-10 17:23:44 |0     |
|24      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |wqdqwd    |2024-05-10 17:22:55 |0     |
|23      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qdwqdw    |qwdwqd    |2024-05-10 17:21:36 |0     |
|22      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwddwq    |2024-05-10 17:20:34 |0     |
|21      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |qwdwdq    |2024-05-10 17:19:21 |0     |
|20      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wdqqwdwdq |wqd       |2024-05-10 17:17:20 |0     |
|19      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwdqwd    |2024-05-10 17:16:09 |0     |
|18      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |qwddwq    |2024-05-10 17:14:55 |0     |
|17      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |asdads    |asdasd    |2024-05-10 17:14:44 |0     |
|16      |6       |김동현 |null                                      |123       |ㅇㅇ        |2024-05-07 17:03:12 |0     |
|15      |4       |홍길동 |null                                      |으으        |대         |2024-05-07 12:57:39 |0     |
|14      |3       |홍길동 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |으으        |대         |2024-05-07 12:57:35 |0     |
|13      |2       |홍길동 |42031e6b-e2ff-4955-ab14-77fb0b50916f.webp |으으        |대         |2024-05-07 12:57:29 |0     |
|12      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:10:08 |0     |
|11      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:09:50 |0     |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|ee5b4faf-e7b6-4353-8cf6-da34c5131bff.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 27
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 26
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 25
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 24
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 23
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 23
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 22
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 21
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 21
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 20
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 19
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 18
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|----|----|
|feed_comment_id |comment |created_at          |user_id |nm  |pic |
|----------------|--------|--------------------|--------|----|----|
|6               |아아      |2024-05-10 11:45:28 |6       |김동현 |null|
|5               |아아      |2024-05-10 11:45:27 |6       |김동현 |null|
|4               |아아      |2024-05-10 11:45:26 |6       |김동현 |null|
|3               |아아      |2024-05-10 11:45:25 |6       |김동현 |null|
|----------------|--------|--------------------|--------|----|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|47ad16bf-1451-457e-b4f5-b88c5c65b5cc.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|bbd9007d-afd7-4af0-90e6-f21b313a988a.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|4e5ac0da-c204-43d1-8f89-bab9b5a46b53.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|5195fb19-d0c3-4f78-b50c-b8ea2996df8f.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:45 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:45 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:47 [32mDEBUG[0;39m http-nio-8080-exec-5] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:47 [32mINFO [0;39m http-nio-8080-exec-5] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:22:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:22:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:47 [32mDEBUG[0;39m http-nio-8080-exec-8] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:47 [32mINFO [0;39m http-nio-8080-exec-8] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:47 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:47 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:22:47 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:47 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:47 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:47 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:47 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:47 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:47 [32mDEBUG[0;39m http-nio-8080-exec-10] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:47 [32mINFO [0;39m http-nio-8080-exec-10] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|feed_id |user_id |nm  |pic                                       |contents  |location  |created_at          |isfav |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
|32      |23      |꾸   |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png  |ㄹㄹ        |ㄹㄹ        |2024-05-13 12:05:30 |0     |
|29      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |asdadssda |asdasd    |2024-05-10 18:06:55 |0     |
|28      |20      |22  |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png  |22        |22        |2024-05-10 17:28:18 |0     |
|27      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wqqwd     |qwdwqd    |2024-05-10 17:26:28 |0     |
|26      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |wqdqwdqdw |2024-05-10 17:24:21 |0     |
|25      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdwqd    |dwqwqd    |2024-05-10 17:23:44 |0     |
|24      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |wqdqwd    |2024-05-10 17:22:55 |0     |
|23      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qdwqdw    |qwdwqd    |2024-05-10 17:21:36 |0     |
|22      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwddwq    |2024-05-10 17:20:34 |0     |
|21      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwdqwd |qwdwdq    |2024-05-10 17:19:21 |0     |
|20      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |wdqqwdwdq |wqd       |2024-05-10 17:17:20 |0     |
|19      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |qwdqwd    |qwdqwd    |2024-05-10 17:16:09 |0     |
|18      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |dwqwqd    |qwddwq    |2024-05-10 17:14:55 |0     |
|17      |19      |123 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |asdads    |asdasd    |2024-05-10 17:14:44 |0     |
|16      |6       |김동현 |null                                      |123       |ㅇㅇ        |2024-05-07 17:03:12 |0     |
|15      |4       |홍길동 |null                                      |으으        |대         |2024-05-07 12:57:39 |0     |
|14      |3       |홍길동 |ec520517-0f85-44f0-ab44-b3da3b822c23.webp |으으        |대         |2024-05-07 12:57:35 |0     |
|13      |2       |홍길동 |42031e6b-e2ff-4955-ab14-77fb0b50916f.webp |으으        |대         |2024-05-07 12:57:29 |0     |
|12      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:10:08 |0     |
|11      |1       |홍길동 |null                                      |으으        |대         |2024-05-07 11:09:50 |0     |
|--------|--------|----|------------------------------------------|----------|----------|--------------------|------|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 32
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b1ac288f-6c38-4c97-a661-48d45ff9fd0a.png |
|59b63d79-91c6-4792-b322-9dbdffb302a7.png |
|4ef491b9-41fc-4c60-bc53-541edeec8395.jpg |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 32
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|feed_comment_id |comment |created_at          |user_id |nm |pic                                      |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
|17              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:31 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|16              |ㅁㄴㅇㅁㄴㅇ  |2024-05-13 16:03:30 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|15              |ㅁㄴㅇ     |2024-05-13 16:03:29 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|14              |ㅁㄴㅇ     |2024-05-13 16:03:28 |23      |꾸  |452beff4-c7e8-43cc-a3b3-fca019ccfdb7.png |
|----------------|--------|--------------------|--------|---|-----------------------------------------|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|ee5b4faf-e7b6-4353-8cf6-da34c5131bff.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 27
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 26
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 25
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 24
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 24
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 23
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 23
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 22
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 21
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 21
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 20
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 19
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 19
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 18
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 18
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 17
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 17
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 16
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 16
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|--------------------|--------|----|----|
|feed_comment_id |comment |created_at          |user_id |nm  |pic |
|----------------|--------|--------------------|--------|----|----|
|6               |아아      |2024-05-10 11:45:28 |6       |김동현 |null|
|5               |아아      |2024-05-10 11:45:27 |6       |김동현 |null|
|4               |아아      |2024-05-10 11:45:26 |6       |김동현 |null|
|3               |아아      |2024-05-10 11:45:25 |6       |김동현 |null|
|----------------|--------|--------------------|--------|----|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 15
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|47ad16bf-1451-457e-b4f5-b88c5c65b5cc.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 15
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 14
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|bbd9007d-afd7-4af0-90e6-f21b313a988a.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 14
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|4e5ac0da-c204-43d1-8f89-bab9b5a46b53.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 13
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 12
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|5195fb19-d0c3-4f78-b50c-b8ea2996df8f.webp |
|------------------------------------------|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 12
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----|
|pic |
|----|
|----|
[0;39m
[2024-05-21 11:22:49 [32mDEBUG[0;39m http-nio-8080-exec-1] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 11
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:49 [32mINFO [0;39m http-nio-8080-exec-1] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:52 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:22:52 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:22:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:52 [32mDEBUG[0;39m http-nio-8080-exec-4] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:52 [32mINFO [0;39m http-nio-8080-exec-4] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:22:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:52 [32mDEBUG[0;39m http-nio-8080-exec-3] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:52 [32mINFO [0;39m http-nio-8080-exec-3] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:57 [32mDEBUG[0;39m http-nio-8080-exec-6] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT    A.nm, A.pic, A.created_at AS createdAt
                , B.feedCnt, B.favCnt
                , C.following, C.follower, C.followState
        FROM user A
        INNER JOIN (
                SELECT A.writer_id
                , COUNT(distinct A.feed_id) AS feedCnt
                , COUNT(B.user_id) AS favCnt
                FROM feed A
                LEFT JOIN feed_favorite B
                ON A.feed_id = B.feed_id
                WHERE A.writer_id = 20
        ) B
        INNER JOIN (
                SELECT SUM(IF(from_user_id = 20, 1, 0)) AS following
                , SUM(IF(to_user_id = 20, 1, 0)) AS follower
                , IFNULL(
                SUM(
                IF(from_user_id = 23 AND to_user_id = 20, 1, 0)
                +
                IF(from_user_id = 20 AND to_user_id = 23, 2, 0)
                )
                , 0) AS followState
        FROM user_follow
        ) C
        WHERE A.user_id = 20
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:57 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT  A.feed_id AS feedId,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic,
                A.contents,
                A.location,
                A.created_at AS createdAt,
                IF (C.feed_id IS NULL, 0, 1) AS isFav
        FROM feed A
        JOIN user B
        ON A.writer_id = B.user_id
        LEFT JOIN feed_favorite C
        ON A.feed_id = C.feed_id
        AND C.user_id = 23

            WHERE A.writer_id = 20

        ORDER BY A.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:57 [32mINFO [0;39m http-nio-8080-exec-6] [jdbc.resultsettable] [36m
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|nm |pic                                      |created_at          |feedcnt |favcnt |following |follower |followstate |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
|22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |2024-05-10 17:27:43 |2       |1      |0         |0        |0           |
|---|-----------------------------------------|--------------------|--------|-------|----------|---------|------------|
[0;39m
[2024-05-21 11:22:57 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|feed_id |user_id |nm |pic                                      |contents  |location |created_at          |isfav |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
|29      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |asdadssda |asdasd   |2024-05-10 18:06:55 |0     |
|28      |20      |22 |f9c9b697-c5fa-4541-b72e-37c6a49a0682.png |22        |22       |2024-05-10 17:28:18 |0     |
|--------|--------|---|-----------------------------------------|----------|---------|--------------------|------|
[0;39m
[2024-05-21 11:22:57 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 29
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:57 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c87400f4-afd3-4e4c-9429-fc4642581d6b.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:57 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 29
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:57 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:22:57 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pics
        WHERE feed_id = 28
 {executed in 1 msec}[0;39m
[2024-05-21 11:22:57 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|81e2e28d-eb7d-49e4-91fa-efd13b3a2db7.png |
|-----------------------------------------|
[0;39m
[2024-05-21 11:22:57 [32mDEBUG[0;39m http-nio-8080-exec-2] [jdbc.sqltiming] [36m com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	A.feed_comment_id AS feedCommentId,
                A.comment,
                A.created_at AS createdAt,
                B.user_id AS writerId,
                B.nm AS writerNm,
                B.pic AS writerPic
        FROM feed_comment A
        JOIN user B
        ON  A.user_id = B.user_id
        WHERE A.feed_id = 28
        ORDER BY A.created_at DESC
        LIMIT 4
 {executed in 0 msec}[0;39m
[2024-05-21 11:22:57 [32mINFO [0;39m http-nio-8080-exec-2] [jdbc.resultsettable] [36m
|----------------|--------|-----------|--------|---|----|
|feed_comment_id |comment |created_at |user_id |nm |pic |
|----------------|--------|-----------|--------|---|----|
|----------------|--------|-----------|--------|---|----|
[0;39m
[2024-05-21 11:40:54 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 11:40:54 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 11:40:56 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 9548 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 11:40:56 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 11:40:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 11:40:56 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 11:40:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 11:40:57 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:40:57 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 11:40:57 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 11:40:57 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 11:40:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 963 ms[0;39m
[2024-05-21 11:40:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 11:40:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 11:40:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 11:40:57 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 11:40:57 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 11:40:58 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.011 seconds (process running for 2.401)[0;39m
[2024-05-21 11:40:58 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 11:40:58 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 11:40:58 [32mINFO [0;39m RMI TCP Connection(1)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 11:40:58 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 11:40:58 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@67a42b2d[0;39m
[2024-05-21 11:40:58 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 14:26:14 [33mWARN [0;39m HikariPool-1 housekeeper] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m14s133ms641µs900ns).[0;39m
[2024-05-21 14:52:13 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 40 class path changes (0 additions, 0 deletions, 40 modifications)[0;39m
[2024-05-21 14:52:13 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 14:52:13 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 14:52:13 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 14:52:13 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 9548 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 14:52:13 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 294 ms[0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 0.541 seconds (process running for 11478.645)[0;39m
[2024-05-21 14:52:14 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
[2024-05-21 18:11:02 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 1400 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 18:11:02 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 18:11:02 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 18:11:02 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 978 ms[0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 18:11:03 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.126 seconds (process running for 2.499)[0;39m
[2024-05-21 18:11:04 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.193] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 18:11:04 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 18:11:04 [32mINFO [0;39m RMI TCP Connection(5)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 18:11:04 [32mINFO [0;39m RMI TCP Connection(4)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 18:11:04 [32mINFO [0;39m RMI TCP Connection(5)-192.168.0.193] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7c46c917[0;39m
[2024-05-21 18:11:04 [32mINFO [0;39m RMI TCP Connection(5)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 18:11:12 [32mINFO [0;39m http-nio-8080-exec-3] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 215 ms[0;39m
[2024-05-21 18:11:30 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 18:11:30 [32mINFO [0;39m SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 18:11:32 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 7436 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 18:11:32 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 18:11:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mDevtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable[0;39m
[2024-05-21 18:11:32 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] [36mFor additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'[0;39m
[2024-05-21 18:11:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 18:11:33 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 18:11:33 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 18:11:33 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 18:11:33 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 18:11:33 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 962 ms[0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 2.017 seconds (process running for 2.376)[0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.193] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring DispatcherServlet 'dispatcherServlet'[0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mInitializing Servlet 'dispatcherServlet'[0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m RMI TCP Connection(3)-192.168.0.193] [org.springframework.web.servlet.DispatcherServlet] [36mCompleted initialization in 1 ms[0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Starting...[0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.pool.HikariPool] [36mHikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6bbd1927[0;39m
[2024-05-21 18:11:34 [32mINFO [0;39m RMI TCP Connection(2)-192.168.0.193] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Start completed.[0;39m
[2024-05-21 18:11:36 [32mINFO [0;39m http-nio-8080-exec-2] [org.springdoc.api.AbstractOpenApiResource] [36mInit duration for springdoc-openapi is: 220 ms[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] [36mRestarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m Thread-5] [org.apache.coyote.http11.Http11NioProtocol] [36mStopping ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown initiated...[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m Thread-5] [com.zaxxer.hikari.HikariDataSource] [36mHikariPool-1 - Shutdown completed.[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarting GreenGramVer2Application using Java 17.0.10 with PID 7436 (D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2\build\classes\java\main started by Administrator in D:\Students\DongHyeon\2024-01\backEnd\GreenGramVer2)[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mNo active profile set, falling back to 1 default profile: "default"[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat initialized with port 8080 (http)[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mInitializing ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardService] [36mStarting service [Tomcat][0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.StandardEngine] [36mStarting Servlet engine: [Apache Tomcat/10.1.20][0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] [36mInitializing Spring embedded WebApplicationContext[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [36mRoot WebApplicationContext: initialization completed in 294 ms[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] [36mAdding welcome page: class path resource [static/index.html][0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [36mLiveReload server is running on port 35729[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [36mExposing 1 endpoint(s) beneath base path '/actuator'[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.apache.coyote.http11.Http11NioProtocol] [36mStarting ProtocolHandler ["http-nio-8080"][0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [36mTomcat started on port 8080 (http) with context path ''[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [com.green.greengram.GreenGramVer2Application] [36mStarted GreenGramVer2Application in 0.516 seconds (process running for 92.371)[0;39m
[2024-05-21 18:13:04 [32mINFO [0;39m restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] [36mCondition evaluation unchanged[0;39m
